{"version":3,"sources":["webpack://vscode-swagger2ts-plugin/./src/index.ts","webpack://vscode-swagger2ts-plugin/./src/test.ts","webpack://vscode-swagger2ts-plugin/external \"fs\"","webpack://vscode-swagger2ts-plugin/external \"path\"","webpack://vscode-swagger2ts-plugin/external \"vscode\"","webpack://vscode-swagger2ts-plugin/webpack/bootstrap","webpack://vscode-swagger2ts-plugin/webpack/startup"],"names":["context","console","log","disposable","vscode","commands","registerCommand","testCreateFile","window","showInformationMessage","subscriptions","push","rootPath","workspace","workspaceFolders","uri","fsPath","getConfiguration","get","showWarningMessage","fs","writeFile","path","resolve","error","showErrorMessage","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"uIAEA,eACA,SAGA,oBAAyBA,GAGrBC,QAAQC,IACJ,6EAMJ,IAAIC,EAAaC,EAAOC,SAASC,gBAC7B,uCACA,KAEL,EAAAC,iBAESH,EAAOI,OAAOC,uBACV,qBAKZT,EAAQU,cAAcC,KAAKR,IAI/B,2B,uFChCA,eACA,SACA,SAEa,EAAAI,eAAiB,K,MAC1B,MAAMK,GAA4C,QAAjC,EAAAR,EAAOS,UAAUC,wBAAgB,eAAG,GAAGC,IAAIC,SAAU,KACtEf,QAAQC,IAAIE,EAAQ,UACpBH,QAAQC,IACJE,EAAOS,UACFI,iBAAiB,qBACjBC,IAAI,eACT,eAEJd,EAAOI,OAAOW,mBACV,QAAQf,EAAOS,UAAUI,iBAAiB,wBAE1CL,EACAQ,EAAGC,UAAUC,EAAKC,QAAQX,EAAU,UAAW,OAAQY,IAC9CA,EAGDvB,QAAQuB,MAAMA,GAFdvB,QAAQC,IAAI,KAAMoB,EAAKC,QAAQX,EAAU,cAMjDR,EAAOI,OAAOiB,iBAAiB,iB,QCzBvCC,EAAOC,QAAUC,QAAQ,O,QCAzBF,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,QCjBRG,CAAoB,M","file":"extension.js","sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport { testCreateFile } from \"./test\";\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    console.log(\n        'Congratulations, your extension \"vscode-swagger2ts-plugin\" is now active!'\n    );\n\n    // The command has been defined in the package.json file\n    // Now provide the implementation of the command with registerCommand\n    // The commandId parameter must match the command field in package.json\n    let disposable = vscode.commands.registerCommand(\n        \"vscode-swagger2ts-plugin.helloWorld\",\n        () => {\n            // The code you place here will be executed every time your command is executed\n\t\t\ttestCreateFile();\n            // Display a message box to the user\n            vscode.window.showInformationMessage(\n                \"Hello World333\"\n            );\n        }\n    );\n\n    context.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","import * as vscode from \"vscode\";\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\n// configuration\r\nexport const testCreateFile = () => {\r\n    const rootPath = vscode.workspace.workspaceFolders?.[0].uri.fsPath || null;\r\n    console.log(vscode, \"target\");\r\n    console.log(\r\n        vscode.workspace\r\n            .getConfiguration(\"swagger-ts-plugin\")\r\n            .get(\"serviceList\"),\r\n        \"serviceList\"\r\n    );\r\n    vscode.window.showWarningMessage(\r\n        `test ${vscode.workspace.getConfiguration(\"swagger-ts-plugin\")}`\r\n    );\r\n    if (rootPath) {\r\n        fs.writeFile(path.resolve(rootPath, `ye.txt`), \"sss\", (error) => {\r\n            if (!error) {\r\n                console.log(\"成功\", path.resolve(rootPath, `ye.txt`));\r\n            } else {\r\n                console.error(error);\r\n            }\r\n        });\r\n    } else {\r\n        vscode.window.showErrorMessage(\"必须打开文件夹才能使用\");\r\n    }\r\n};\r\n","module.exports = require(\"fs\");;","module.exports = require(\"path\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(607);\n"],"sourceRoot":""}